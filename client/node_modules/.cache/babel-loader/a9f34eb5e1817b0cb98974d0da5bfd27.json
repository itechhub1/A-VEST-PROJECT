{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tohshine/Desktop/repository/AimartAvestProject/client/src/layout/dashboard/investors/plan/planDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { plans } from \"../../../../constant\";\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { parse } from \"query-string\";\nimport { renderFeild } from \"../../../../components/inputFeild\";\n/*  */\n\nconst renderOptionFeild = () => {\n  return plans.find(plan => /*#__PURE__*/_jsxDEV(\"select\", {\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      children: \"--Please choose a plan--\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: plan.duration.map(dur => dur)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n};\n\nconst PlanDetails = ({\n  amount,\n  handleSubmit,\n  prevPage,\n  nextPage,\n  change\n}) => {\n  _s();\n\n  const [invest, setinvest] = useState(null);\n  const {\n    id\n  } = parse(window.location.search);\n\n  const getInvestmentDetails = () => {\n    return plans.find(inv => inv.id === parseInt(id) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [change(\"plan\", inv.name), change(\"duration\", inv.duration), setinvest(inv)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this));\n  };\n\n  const calculateROI = amount => {\n    if (amount) {\n      let percentROI = invest.percentage / 100 * parseInt(amount);\n      percentROI = percentROI + parseInt(amount);\n      if (isNaN(percentROI)) return;\n      return change(\"roi\", \"₦\" + percentROI.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n    }\n  };\n\n  useEffect(() => {\n    getInvestmentDetails();\n  }, [id]);\n\n  const submit = formValues => {\n    if (!formValues.amount) return;\n    console.log(\"amount\", formValues.amount);\n    const inrange = formValues.amount >= parseInt(invest.min) && formValues.amount <= parseInt(invest.max);\n\n    if (!inrange) {\n      throw new SubmissionError({\n        amount: \"invalid price range:kindly check amount range\"\n      });\n    }\n\n    nextPage(); // if (!inrange) {\n    //   throw new SubmissionError({\n    //     amount: \"Kindly choose within formValues.amount range\",\n    //     _error: 'Login failed!'\n    //   });\n    // }else{\n    //   console.log('formValues',formValues);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" max-w-3xl w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold text-black\",\n        children: \"Plan Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-red-800 text-base italic\",\n        children: \"Please do not refresh this page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-800 text-base\",\n        children: \"step 1/4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4 \",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(submit),\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            component: renderFeild,\n            disable: true,\n            name: \"plan\",\n            label: \"Plan Selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            component: renderOptionFeild,\n            name: \"duration\",\n            label: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            component: renderFeild,\n            name: \"amount\",\n            label: \"Amount to invest\",\n            onBlur: () => calculateROI(amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), invest && invest && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-800 mb-2\",\n            children: `minimum investment is  ₦${invest.min.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} maximum amount is  ₦${invest.max.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            component: renderFeild,\n            disable: true,\n            name: \"roi\",\n            label: \"Your total ROI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-800 text-white p-2 px-8 inline-flex rounded-lg\",\n              onClick: prevPage,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-6 h-6 \",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  \"stroke-linecap\": \"round\",\n                  \"stroke-linejoin\": \"round\",\n                  \"stroke-width\": \"2\",\n                  d: \"M15 19l-7-7 7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), \"Prev\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-800 text-white p-2 px-8 inline-flex ml-2 rounded-lg\",\n              onClick: submit,\n              children: [\"Next\", /*#__PURE__*/_jsxDEV(\"svg\", {\n                class: \"w-6 h-6\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  \"stroke-linecap\": \"round\",\n                  \"stroke-linejoin\": \"round\",\n                  \"stroke-width\": \"2\",\n                  d: \"M9 5l7 7-7 7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlanDetails, \"PHYCHi3NHsRXkUWgjNlUBhjziEM=\");\n\n_c = PlanDetails;\n\nconst validate = ({\n  amount\n}) => {\n  const error = {};\n\n  if (!amount) {\n    error.amount = \"amount Feild Is Empty.\";\n  }\n\n  return error;\n};\n\nconst mapStateToProps = state => {\n  var _state$form$investmen;\n\n  let amount = (_state$form$investmen = state.form.investmentForm) === null || _state$form$investmen === void 0 ? void 0 : _state$form$investmen.values.amount;\n  return {\n    amount\n  };\n};\n\nexport default connect(mapStateToProps)(reduxForm({\n  form: \"investmentForm\",\n  validate,\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true\n})(PlanDetails));\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanDetails\");","map":{"version":3,"sources":["/home/tohshine/Desktop/repository/AimartAvestProject/client/src/layout/dashboard/investors/plan/planDetails.jsx"],"names":["React","useState","useEffect","plans","Field","reduxForm","SubmissionError","connect","parse","renderFeild","renderOptionFeild","find","plan","duration","map","dur","PlanDetails","amount","handleSubmit","prevPage","nextPage","change","invest","setinvest","id","window","location","search","getInvestmentDetails","inv","parseInt","name","calculateROI","percentROI","percentage","isNaN","toString","replace","submit","formValues","console","log","inrange","min","max","validate","error","mapStateToProps","state","form","investmentForm","values","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { plans } from \"../../../../constant\";\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { parse } from \"query-string\";\nimport { renderFeild } from \"../../../../components/inputFeild\";\n\n/*  */\nconst renderOptionFeild = () => {\n  return plans.find((plan) => (\n    <select>\n      <option value=\"\" disabled>\n        --Please choose a plan--\n      </option>\n      <option value=\"\">{plan.duration.map((dur) => dur)}</option>\n    </select>\n  ));\n};\n\nconst PlanDetails = ({ amount, handleSubmit, prevPage, nextPage, change }) => {\n  const [invest, setinvest] = useState(null);\n  const { id } = parse(window.location.search);\n\n  const getInvestmentDetails = () => {\n    return plans.find(\n      (inv) =>\n        inv.id === parseInt(id) && (\n          <div>\n            {change(\"plan\", inv.name)}\n            {change(\"duration\", inv.duration)}\n            {setinvest(inv)}\n          </div>\n        )\n    );\n  };\n\n  const calculateROI = (amount) => {\n    if (amount) {\n      let percentROI = (invest.percentage / 100) * parseInt(amount);\n      percentROI = percentROI + parseInt(amount);\n      if (isNaN(percentROI)) return;\n      return change(\n        \"roi\",\n        \"₦\" + percentROI.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getInvestmentDetails();\n  }, [id]);\n\n  const submit = (formValues) => {\n    if (!formValues.amount) return;\n    console.log(\"amount\", formValues.amount);\n    const inrange =\n      formValues.amount >= parseInt(invest.min) &&\n      formValues.amount <= parseInt(invest.max);\n    if (!inrange) {\n      throw new SubmissionError({\n        amount: \"invalid price range:kindly check amount range\",\n      });\n    }\n\n    nextPage();\n    // if (!inrange) {\n    //   throw new SubmissionError({\n    //     amount: \"Kindly choose within formValues.amount range\",\n    //     _error: 'Login failed!'\n    //   });\n    // }else{\n    //   console.log('formValues',formValues);\n    // }\n  };\n\n  return (\n    <div className=\" max-w-3xl w-full\">\n      <div>\n        <h1 className=\"text-3xl font-semibold text-black\">Plan Details</h1>\n        <p className=\" text-red-800 text-base italic\">\n          Please do not refresh this page\n        </p>\n\n        <p className=\"text-gray-800 text-base\">step 1/4</p>\n\n        <div className=\"my-4 \">\n          <form onSubmit={handleSubmit(submit)}>\n            <Field\n              component={renderFeild}\n              disable={true}\n              name=\"plan\"\n              label=\"Plan Selected\"\n            />\n\n            <Field\n              component={renderOptionFeild}\n              name=\"duration\"\n              label=\"Duration\"\n            />\n\n            {/* <input\n              onChange={(e) => {\n                let percentROI = (invest.percentage / 100) * parseInt(e.target.value);\n                percentROI = percentROI + parseInt(e.target.value);\n                if(isNaN(percentROI)) return\n                return change(\"roi\", \"₦\"+percentROI.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n              }}\n              type=\"text\"\n              className=\"w-full px-3 py-2 mb-1 border-2 border-gray-200 rounded-md focus:outline-none focus:border-indigo-500 transition-colors\"\n            /> */}\n\n            <Field\n              component={renderFeild}\n              name=\"amount\"\n              label=\"Amount to invest\"\n              onBlur={() => calculateROI(amount)}\n            />\n\n            {invest && invest && (\n              <p className=\"text-xs text-gray-800 mb-2\">{`minimum investment is  ₦${invest.min\n                .toString()\n                .replace(\n                  /\\B(?=(\\d{3})+(?!\\d))/g,\n                  \",\"\n                )} maximum amount is  ₦${invest.max\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`}</p>\n            )}\n\n            <Field\n              component={renderFeild}\n              disable={true}\n              name=\"roi\"\n              label=\"Your total ROI\"\n            />\n\n            <div className=\"flex items-center\">\n              <button\n                className=\"bg-blue-800 text-white p-2 px-8 inline-flex rounded-lg\"\n                onClick={prevPage}\n              >\n                <svg\n                  className=\"w-6 h-6 \"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M15 19l-7-7 7-7\"\n                  ></path>\n                </svg>\n                Prev\n              </button>\n\n              <button\n                className=\"bg-blue-800 text-white p-2 px-8 inline-flex ml-2 rounded-lg\"\n                onClick={submit}\n              >\n                Next\n                <svg\n                  class=\"w-6 h-6\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  ></path>\n                </svg>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst validate = ({ amount }) => {\n  const error = {};\n\n  if (!amount) {\n    error.amount = \"amount Feild Is Empty.\";\n  }\n\n  return error;\n};\nconst mapStateToProps = (state) => {\n  let amount = state.form.investmentForm?.values.amount;\n  return { amount };\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm({\n    form: \"investmentForm\",\n    validate,\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true,\n  })(PlanDetails)\n);\n"]},"metadata":{},"sourceType":"module"}
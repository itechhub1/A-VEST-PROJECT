[{"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/index.js":"1","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/App.jsx":"2","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/pageNotFound.jsx":"3","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/main.jsx":"4","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/components/card.jsx":"5","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/employerDetails.jsx":"6","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/planDetails.jsx":"7","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/constant.js":"8","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/profile.jsx":"9","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/invest.jsx":"10","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/settings.jsx":"11","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/reducers/index.js":"12","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/components/inputFeild.jsx":"13","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/sidenav.jsx":"14","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/paymentInfo.jsx":"15","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/personalInformation.jsx":"16","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/auth/login.jsx":"17","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/nextOfKinDetails.jsx":"18","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/plans.jsx":"19","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/history.js":"20","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/auth/register.jsx":"21","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/index.js":"22","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/index.js":"23","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/reportWebVitals.js":"24","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/store.js":"25"},{"size":622,"mtime":1611586761209,"results":"26","hashOfConfig":"27"},{"size":2030,"mtime":1611836161730,"results":"28","hashOfConfig":"27"},{"size":204,"mtime":1611574657896,"results":"29","hashOfConfig":"27"},{"size":11617,"mtime":1611569757487,"results":"30","hashOfConfig":"27"},{"size":151,"mtime":1611441804410,"results":"31","hashOfConfig":"27"},{"size":2870,"mtime":1611777709449,"results":"32","hashOfConfig":"27"},{"size":6223,"mtime":1612252542683,"results":"33","hashOfConfig":"27"},{"size":1163,"mtime":1612212535429,"results":"34","hashOfConfig":"27"},{"size":2422,"mtime":1611912259711,"results":"35","hashOfConfig":"27"},{"size":4228,"mtime":1611835159006,"results":"36","hashOfConfig":"27"},{"size":1348,"mtime":1611837251811,"results":"37","hashOfConfig":"27"},{"size":152,"mtime":1611587373659,"results":"38","hashOfConfig":"27"},{"size":750,"mtime":1611678042330,"results":"39","hashOfConfig":"27"},{"size":12224,"mtime":1611836647321,"results":"40","hashOfConfig":"27"},{"size":2905,"mtime":1611847695104,"results":"41","hashOfConfig":"27"},{"size":3599,"mtime":1612261354065,"results":"42","hashOfConfig":"27"},{"size":3073,"mtime":1611592737606,"results":"43","hashOfConfig":"27"},{"size":4337,"mtime":1611847628956,"results":"44","hashOfConfig":"27"},{"size":3072,"mtime":1611775455187,"results":"45","hashOfConfig":"27"},{"size":83,"mtime":1611480409101,"results":"46","hashOfConfig":"27"},{"size":4250,"mtime":1611483110179,"results":"47","hashOfConfig":"27"},{"size":1099,"mtime":1611769888999,"results":"48","hashOfConfig":"27"},{"size":304,"mtime":1611604931185,"results":"49","hashOfConfig":"27"},{"size":362,"mtime":1611309575427,"results":"50","hashOfConfig":"27"},{"size":349,"mtime":1611586686493,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"171owhd",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/index.js",[],["110","111"],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/App.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/pageNotFound.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/main.jsx",[],["112","113"],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/components/card.jsx",[],["114","115"],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/employerDetails.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/planDetails.jsx",["116","117"],"import React, { useState, useEffect } from \"react\";\nimport { plans } from \"../../../../constant\";\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { parse } from \"query-string\";\nimport { renderFeild } from \"../../../../components/inputFeild\";\n\n/*  */\n\nconst PlanDetails = ({\n  investData,\n  handleSubmit,\n  prevPage,\n  nextPage,\n  change,\n}) => {\n  const [invest, setinvest] = useState(null);\n\n  const { id } = parse(window.location.search);\n  const renderOptionFeild = ({ input, meta }) => {\n    if (!id) return null;\n    const data = plans.find((pl) => pl.id === parseInt(id));\n\n    //if (!data) return;\n    return (\n      <div className=\"\">\n        <p className=\"font-bold text-sm mb-2 ml-1\">Pick an investment plan</p>\n        <select\n           \n          {...input}\n          className=\"w-full px-3 py-2 mb-1 border-2 border-gray-200 rounded-md focus:outline-none focus:border-indigo-500 transition-colors\"\n        >\n          <option value=\"\" disabled>\n            --- select a plan --\n          </option>\n          {data.duration.map((_) => {\n            return (\n              <option  value={_.data}>\n                {_.data}\n              </option>\n            );\n          })}\n        </select>\n\n        {meta.touched && meta.error ? (\n          <div className=\" text-xs text-red-600 italic \">{meta.error}</div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n\n  /*manipulating investment data slsected by invexstor while prefil the redux-form */\n  const getInvestmentDetails = () => {\n    return plans.find(\n      (inv) =>\n        inv.id === parseInt(id) && (\n          <div>\n            {change(\"plan\", inv.name)}\n            {setinvest(inv)}\n          </div>\n        )\n    );\n  };\n\n  const calculateROI = (investData) => {\n    if (investData) {\n      if(! investData.percentage)return\n      const extractedPercentage = investData.percentage.split(\" \")[0].split('%')[0]\n     \n      let percentROI =\n        (extractedPercentage / 100) * parseInt(investData.amount);\n      percentROI = percentROI + parseInt(investData.amount);\n      if (isNaN(percentROI)) return;\n      return change(\n        \"roi\",\n        \"₦\" + percentROI.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n      );\n    }\n  };\n\n  useEffect(() => {\n    getInvestmentDetails();\n  }, [id]);\n  useEffect(() => {\n    calculateROI(investData);\n  }, [investData]);\n\n  const submit = (formValues) => {\n    console.log(\"amount\", formValues.amount);\n    const inrange =\n      formValues.amount >= parseInt(invest.min) &&\n      formValues.amount <= parseInt(invest.max);\n    if (!inrange) {\n      throw new SubmissionError({\n        amount: \"invalid price range:kindly check amount range\",\n      });\n    }\n\n    nextPage();\n  };\n\n  return (\n    <div className=\" max-w-3xl w-full\">\n      <div>\n        <h1 className=\"text-3xl font-semibold text-black dark:text-gray-200\">\n          Plan Details\n        </h1>\n        <p className=\" text-red-800 text-base italic\">\n          Please do not refresh this page\n        </p>\n\n        <p className=\"text-gray-800 text-base\">step 1/4</p>\n\n        <div className=\"my-4 \">\n          <form onSubmit={handleSubmit(submit)}>\n            <Field\n              component={renderFeild}\n              disable={true}\n              name=\"plan\"\n              label=\"Plan Selected\"\n            />\n            <Field\n              component={renderOptionFeild}\n            \n              name=\"percentage\"\n              label=\"Duration\"\n            />{\" \"}\n            <Field\n              component={renderFeild}\n              name=\"amount\"\n              label=\"Amount to invest\"\n            />\n            {invest && invest && (\n              <p className=\"text-xs text-gray-800 mb-2\">{`minimum investment is  ₦${invest.min\n                .toString()\n                .replace(\n                  /\\B(?=(\\d{3})+(?!\\d))/g,\n                  \",\"\n                )} maximum amount is  ₦${invest.max\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`}</p>\n            )}\n            <Field\n              component={renderFeild}\n              disable={true}\n              name=\"roi\"\n              label=\"Your total ROI\"\n            />\n            <div className=\"flex items-center mt-4\">\n              <button\n                className=\"bg-blue-800 text-white p-2 px-8 inline-flex rounded-lg\"\n                onClick={prevPage}\n              >\n                <svg\n                  className=\"w-6 h-6 \"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M15 19l-7-7 7-7\"\n                  ></path>\n                </svg>\n                Prev\n              </button>\n\n              <button\n                className=\"bg-blue-800 text-white p-2 px-8 inline-flex ml-2 rounded-lg\"\n                onSubmit=\"submit\"\n              >\n                Next\n                <svg\n                  class=\"w-6 h-6\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"M9 5l7 7-7 7\"\n                  ></path>\n                </svg>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst validate = ({ amount, percentage }) => {\n  const error = {};\n\n  if (!amount) {\n    error.amount = \"amount feild cannot be empty.\";\n  }\n  if (!percentage) {\n    error.percentage = \"select plan feild cannot be empty\";\n  }\n\n  return error;\n};\nconst mapStateToProps = (state) => {\n  let investData = state.form.investmentForm?.values;\n  return { investData };\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm({\n    form: \"investmentForm\",\n    validate,\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true,\n  })(PlanDetails)\n);\n","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/constant.js",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/profile.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/invest.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/settings.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/reducers/index.js",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/components/inputFeild.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/sidenav.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/paymentInfo.jsx",["118"],"import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderFeild } from \"./../../../../components/inputFeild\";\n\nconst PaymentInfo = ({ prevPage, nexPage, handleSubmit }) => {\n  const renderPayment = ({ input, meta }) => {\n    return (\n      <div className=\"mt-4\">\n        <div className=\"flex items-center mb-4\">\n          <p>Select a payment plan</p>{\" \"}\n          <img\n            src={require(\"../../../../assets/paystack.png\").default}\n            alt=\"aimart invest paystack picture\"\n            className=\" ml-2 w-32\"\n          />\n        </div>\n        <select className=\"w-full px-3 py-2 mb-1 border-2 border-gray-200 rounded-md focus:outline-none focus:border-indigo-500 transition-colors\" {...input}>\n          <option value=\"\" disabled>\n            --- select payment plan ---\n          </option>\n          <option value=\"paystack\">Paystack</option>\n          <option value=\"bank deposit\">Bank payment</option>\n        </select>\n        {meta.touched && meta.error ? (\n          <div className=\" text-xs text-red-600 italic \">{meta.error}</div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n  const submit = () => {\n    nexPage();\n  };\n\n  return (\n    <div className=\"w-full max-w-3xl\">\n      <h1 className=\" font-semibold text-3xl\"> Payment Information</h1>\n\n      <p className=\" text-red-800 text-base italic\">\n        Please do not refresh this page\n      </p>\n\n      <p className=\"text-gray-800 text-base\">Final Step</p>\n\n      <form onSubmit={handleSubmit(submit)}>\n        <Field\n          name=\"amount\"\n          component={renderFeild}\n          disable=\"true\"\n          label=\"Amount used for investment\"\n        />\n\n        <Field name=\"paymentPlan\" component={renderPayment} />\n        <div className=\"flex items-center mt-2\">\n          <button\n            className=\"bg-blue-800 text-white p-2 px-8 inline-flex rounded-lg\"\n            onClick={prevPage}\n          >\n            <svg\n              className=\"w-6 h-6 \"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M15 19l-7-7 7-7\"\n              ></path>\n            </svg>\n            Prev\n          </button>\n\n          <button\n            className=\"bg-red-800 text-white p-2 px-8 inline-flex ml-2 rounded-lg\"\n            onSubmit=\"submit\"\n          >\n            Submit Form\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst validate = ({ paymentPlan }) => {\n  const error = {};\n  if (!paymentPlan) {\n    error.paymentPlan = \"select a payment plan\";\n  }\n  return error;\n};\n\nexport default reduxForm({\n  form: \"investmentForm\",\n  validate,\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n})(PaymentInfo);\n","/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/personalInformation.jsx",[],["119","120"],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/auth/login.jsx",[],["121","122"],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/nextOfKinDetails.jsx",[],["123","124"],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/plans.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/history.js",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/auth/register.jsx",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/plan/index.js",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/layout/dashboard/investors/index.js",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/reportWebVitals.js",[],"/home/tohshine/Desktop/repository/A-VEST-PROJECT/client/src/store.js",["125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"126","replacedBy":"130"},{"ruleId":"128","replacedBy":"131"},{"ruleId":"126","replacedBy":"132"},{"ruleId":"128","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":86,"column":6,"nodeType":"136","endLine":86,"endColumn":10,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":89,"column":6,"nodeType":"136","endLine":89,"endColumn":18,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":11,"column":11,"nodeType":"142","endLine":15,"endColumn":13},{"ruleId":"126","replacedBy":"143"},{"ruleId":"128","replacedBy":"144"},{"ruleId":"126","replacedBy":"145"},{"ruleId":"128","replacedBy":"146"},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":40,"nodeType":"151","messageId":"152","endLine":1,"endColumn":47},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],["153"],["154"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInvestmentDetails'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has a missing dependency: 'calculateROI'. Either include it or remove the dependency array.",["156"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["153"],["154"],["153"],["154"],["153"],["154"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [getInvestmentDetails, id]",{"range":"161","text":"162"},"Update the dependencies array to be: [calculateROI, investData]",{"range":"163","text":"164"},[2339,2343],"[getInvestmentDetails, id]",[2401,2413],"[calculateROI, investData]"]